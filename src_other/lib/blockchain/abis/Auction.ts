export default [
  {
    inputs: [
      {
        internalType: "contract SunflowerLandSessionManager",
        name: "_session",
        type: "address",
      },
      {
        internalType: "contract SunflowerLandInventory",
        name: "_inventory",
        type: "address",
      },
      {
        internalType: "contract SunflowerLand",
        name: "_farm",
        type: "address",
      },
      {
        internalType: "contract BumpkinWearables",
        name: "_wearables",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mintFeeWallet",
        type: "address",
      },
      { internalType: "address", name: "_signer", type: "address" },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe[]",
        name: "_recipes",
        type: "tuple[]",
      },
    ],
    name: "addCollectibleBatch",
    outputs: [{ internalType: "bool[]", name: "", type: "bool[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_game", type: "address" }],
    name: "addGameRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe[]",
        name: "_recipes",
        type: "tuple[]",
      },
    ],
    name: "addWearableBatch",
    outputs: [{ internalType: "bool[]", name: "", type: "bool[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bumpkinWearables",
    outputs: [
      {
        internalType: "contract BumpkinWearables",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "executed",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farm",
    outputs: [
      {
        internalType: "contract SunflowerLand",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_game", type: "address" }],
    name: "gameAddGameRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_game", type: "address" }],
    name: "gameRemoveGameRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "gameRoles",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "id", type: "uint256" }],
    name: "getCollectible",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256[]", name: "ids", type: "uint256[]" }],
    name: "getCollectibleBatch",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "id", type: "uint256" }],
    name: "getWearable",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256[]", name: "ids", type: "uint256[]" }],
    name: "getWearableBatch",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mintId", type: "uint256" },
          { internalType: "uint256", name: "maxSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          { internalType: "bool", name: "enabled", type: "bool" },
        ],
        internalType: "struct SunflowerLandAuction.Recipe[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inventory",
    outputs: [
      {
        internalType: "contract SunflowerLandInventory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes", name: "signature", type: "bytes" },
      { internalType: "bytes32", name: "sessionId", type: "bytes32" },
      { internalType: "bytes32", name: "nextSessionId", type: "bytes32" },
      { internalType: "uint256", name: "deadline", type: "uint256" },
      { internalType: "uint256", name: "farmId", type: "uint256" },
      { internalType: "uint256", name: "mintFee", type: "uint256" },
      { internalType: "uint256", name: "id", type: "uint256" },
      { internalType: "uint256", name: "supply", type: "uint256" },
    ],
    name: "mintCollectible",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes", name: "signature", type: "bytes" },
      { internalType: "bytes32", name: "sessionId", type: "bytes32" },
      { internalType: "bytes32", name: "nextSessionId", type: "bytes32" },
      { internalType: "uint256", name: "deadline", type: "uint256" },
      { internalType: "uint256", name: "farmId", type: "uint256" },
      { internalType: "uint256", name: "id", type: "uint256" },
      { internalType: "uint256", name: "supply", type: "uint256" },
      { internalType: "uint256", name: "mintFee", type: "uint256" },
    ],
    name: "mintWearable",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256[]", name: "ids", type: "uint256[]" }],
    name: "removeCollectibleBatch",
    outputs: [{ internalType: "bool[]", name: "", type: "bool[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_game", type: "address" }],
    name: "removeGameRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256[]", name: "ids", type: "uint256[]" }],
    name: "removeWearableBatch",
    outputs: [{ internalType: "bool[]", name: "", type: "bool[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "session",
    outputs: [
      {
        internalType: "contract SunflowerLandSessionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_team", type: "address" }],
    name: "transferMintFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_signer", type: "address" }],
    name: "transferSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;
